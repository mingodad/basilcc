-- Basil LR finite state machine
-- Generated by the BasilCC parser generator
-- Module returns table of node classes (do not extend classes here)

local fsm = {}

-- attrib-seq ->
local AttribSeq1 = {}
function AttribSeq1:accept(visitor)
   return visitor:onAttribSeq1(self)
end
fsm.AttribSeq1 = AttribSeq1

-- attrib-seq -> attrib-seq NUMBER
local AttribSeq2 = {}
function AttribSeq2:accept(visitor)
   return visitor:onAttribSeq2(self)
end
fsm.AttribSeq2 = AttribSeq2

-- attrib-seq -> attrib-seq LT
local AttribSeq3 = {}
function AttribSeq3:accept(visitor)
   return visitor:onAttribSeq3(self)
end
fsm.AttribSeq3 = AttribSeq3

-- attrib-seq -> attrib-seq STAR
local AttribSeq4 = {}
function AttribSeq4:accept(visitor)
   return visitor:onAttribSeq4(self)
end
fsm.AttribSeq4 = AttribSeq4

-- attrib-seq -> attrib-seq PLUS bang-seq-opt
local AttribSeq5 = {}
function AttribSeq5:accept(visitor)
   return visitor:onAttribSeq5(self)
end
fsm.AttribSeq5 = AttribSeq5

-- attrib-seq -> attrib-seq CARET bang-seq-opt
local AttribSeq6 = {}
function AttribSeq6:accept(visitor)
   return visitor:onAttribSeq6(self)
end
fsm.AttribSeq6 = AttribSeq6

-- attrib-seq -> attrib-seq GT bang-seq-opt
local AttribSeq7 = {}
function AttribSeq7:accept(visitor)
   return visitor:onAttribSeq7(self)
end
fsm.AttribSeq7 = AttribSeq7

-- bang-seq -> BANG
local BangSeq1 = {}
function BangSeq1:accept(visitor)
   return visitor:onBangSeq1(self)
end
fsm.BangSeq1 = BangSeq1

-- bang-seq -> bang-seq BANG
local BangSeq2 = {}
function BangSeq2:accept(visitor)
   return visitor:onBangSeq2(self)
end
fsm.BangSeq2 = BangSeq2

-- node-type -> LPAREN IDENT RPAREN
-- node-type -> LBRACK IDENT RBRACK
local NodeType = {}
function NodeType:accept(visitor)
   return visitor:onNodeType(self)
end
fsm.NodeType = NodeType

-- rule -> symbol node-type-opt ARROW symbol-seq-opt
local Rule = {}
function Rule:accept(visitor)
   return visitor:onRule(self)
end
fsm.Rule = Rule

-- rule -> IDENT COLON symbol ARROW symbol-seq-opt
local RuleDeprecated = {}
function RuleDeprecated:accept(visitor)
   return visitor:onRuleDeprecated(self)
end
fsm.RuleDeprecated = RuleDeprecated

-- symbol <* -> IDENT attrib-seq
local Symbol = {}
function Symbol:accept(visitor)
   return visitor:onSymbol(self)
end
fsm.Symbol = Symbol

-- symbol-seq -> symbol
local SymbolSeq1 = {}
function SymbolSeq1:accept(visitor)
   return visitor:onSymbolSeq1(self)
end
fsm.SymbolSeq1 = SymbolSeq1

-- symbol-seq -> symbol-seq symbol
local SymbolSeq2 = {}
function SymbolSeq2:accept(visitor)
   return visitor:onSymbolSeq2(self)
end
fsm.SymbolSeq2 = SymbolSeq2

-- action constants
local ACTION_SHIFT  = basil.ACTION_SHIFT
local ACTION_REDUCE = basil.ACTION_REDUCE
local ACTION_ACCEPT = basil.ACTION_ACCEPT
local ACTION_DONE   = basil.ACTION_DONE

-- initialize FSM
basil.finite_state_machine {
   nodes = {
      AttribSeq1,
      AttribSeq2,
      AttribSeq3,
      AttribSeq4,
      AttribSeq5,
      AttribSeq6,
      AttribSeq7,
      BangSeq1,
      BangSeq2,
      NodeType,
      Rule,
      RuleDeprecated,
      Symbol,
      SymbolSeq1,
      SymbolSeq2,
   },
   operators = {
      'EOT',
      'ARROW',
      'LPAREN',
      'IDENT',
      'RPAREN',
      'LBRACK',
      'RBRACK',
      'NUMBER',
      'LT',
      'STAR',
      'PLUS',
      'CARET',
      'GT',
      'BANG',
      'COLON',
   },
   rules = {
      {1},
      {0},
      {1},
      {1},
      {2},
      {4, 10},
      {0},
      {1},
      {3, 9},
      {3, 9},
      {0},
      {1},
      {1, 13},
      {2, 14},
      {2, 12},
      {0, 0},
      {2, 1},
      {2, 2},
      {2, 3},
      {3, 4},
      {3, 5},
      {3, 6},
      {0},
      {1},
      {1, 7},
      {2, 8},
      {5, 11},
   },
   action_seqs = {
      {ACTION_SHIFT, 1},
      {ACTION_REDUCE, 1, 1},
      {ACTION_SHIFT, 6},
      {ACTION_REDUCE, 15, 9},
      {ACTION_DONE, 0, 0},
      {ACTION_REDUCE, 2, 1},
      {ACTION_REDUCE, 3, 2},
      {ACTION_SHIFT, 9},
      {ACTION_SHIFT, 10},
      {ACTION_REDUCE, 6, 5},
      {ACTION_SHIFT, 13},
      {ACTION_ACCEPT, 14, 4},
      {ACTION_SHIFT, 15},
      {ACTION_SHIFT, 16},
      {ACTION_SHIFT, 17},
      {ACTION_SHIFT, 18},
      {ACTION_SHIFT, 19},
      {ACTION_SHIFT, 20},
      {ACTION_REDUCE, 4, 2},
      {ACTION_SHIFT, 21},
      {ACTION_SHIFT, 22},
      {ACTION_SHIFT, 23},
      {ACTION_REDUCE, 7, 5},
      {ACTION_SHIFT, 25},
      {ACTION_REDUCE, 16, 9},
      {ACTION_REDUCE, 17, 9},
      {ACTION_REDUCE, 18, 9},
      {ACTION_SHIFT, 26},
      {ACTION_REDUCE, 22, 10},
      {ACTION_SHIFT, 31},
      {ACTION_SHIFT, 32},
      {ACTION_SHIFT, 33},
      {ACTION_REDUCE, 10, 6},
      {ACTION_REDUCE, 10, 6},
      {ACTION_REDUCE, 24, 11},
      {ACTION_REDUCE, 19, 9},
      {ACTION_SHIFT, 38},
      {ACTION_REDUCE, 23, 10},
      {ACTION_REDUCE, 20, 9},
      {ACTION_REDUCE, 21, 9},
      {ACTION_REDUCE, 8, 7},
      {ACTION_REDUCE, 9, 7},
      {ACTION_REDUCE, 12, 8},
      {ACTION_REDUCE, 5, 3},
      {ACTION_SHIFT, 33},
      {ACTION_REDUCE, 11, 6},
      {ACTION_REDUCE, 11, 6},
      {ACTION_REDUCE, 26, 3},
      {ACTION_REDUCE, 25, 11},
      {ACTION_REDUCE, 13, 8},
      seqs_end = {
         1,
         2,
         3,
         4,
         5,
         5,
         6,
         7,
         8,
         9,
         10,
         11,
         12,
         13,
         14,
         15,
         16,
         17,
         18,
         19,
         20,
         21,
         22,
         23,
         24,
         25,
         26,
         27,
         28,
         29,
         30,
         31,
         33,
         34,
         35,
         36,
         37,
         38,
         39,
         40,
         41,
         42,
         43,
         44,
         46,
         47,
         48,
         49,
         50,
      },
   },
   move_sels = {
      {3, 0},
      {14, 2},
      {0, 4},
      {2, 8},
      {5, 9},
      {3, 11},
      {1, 12},
      {2, 12},
      {5, 12},
      {7, 13},
      {8, 14},
      {9, 15},
      {10, 16},
      {11, 17},
      {12, 18},
      {3, 20},
      {3, 21},
      {1, 22},
      {1, 24},
      {13, 28},
      {4, 30},
      {6, 31},
      {3, 32},
      {1, 12},
      {7, 13},
      {8, 14},
      {9, 15},
      {10, 16},
      {11, 17},
      {12, 18},
      {13, 36},
      {3, 44},
      {0, 12},
      {3, 12},
      {7, 13},
      {8, 14},
      {9, 15},
      {10, 16},
      {11, 17},
      {12, 18},
      sels_end = {
         1,
         2,
         3,
         3,
         5,
         6,
         15,
         16,
         17,
         18,
         19,
         20,
         21,
         22,
         23,
         30,
         31,
         32,
         40,
      },
   },
   states = {
      {0, 1, 0, 0},
      {1, 3, 0, 1},
      {2, 5, 0},
      {0, 6, 0, 2},
      {3, 7, 0},
      {4, 10, 0, 3},
      {5, 5, 0, 4},
      {6, 5, 0},
      {3, 19, 0},
      {7, 5, 0},
      {8, 5, 0},
      {9, 5, 0},
      {3, 23, 0},
      {3, 3, 0, 5},
      {10, 5, 0},
      {3, 25, 0},
      {3, 26, 0},
      {3, 27, 0},
      {11, 29, 0, 6},
      {11, 29, 0, 7},
      {11, 29, 0, 8},
      {12, 5, 0},
      {13, 5, 0},
      {14, 33, 0, 9},
      {15, 5, 0},
      {14, 33, 0, 10},
      {3, 34, 0},
      {3, 35, 0},
      {16, 37, 0},
      {3, 38, 0},
      {3, 39, 0},
      {3, 40, 0},
      {3, 41, 0},
      {3, 3, 0, 11},
      {3, 42, 0},
      {3, 43, 0},
      {17, 45, 0, 12},
      {3, 46, 0},
      {3, 47, 0},
      {18, 5, 0},
      {3, 48, 0},
   },
   shift_state_sels = {
      {2, 8},
      {4, 14},
      {9, 34},
      {10, 34},
      {12, 40},
      {10, 37},
      {5, 24},
      {11, 39},
      {7, 29},
      {8, 30},
      sels_end = {
         0,
         0,
         1,
         5,
         5,
         6,
         6,
         6,
         8,
         10,
         10,
      },
   },
   gotos = {
      {},
      {0, 2},
      {1, 3},
      {2, 4},
      {3, 5},
      {4, 11},
      {5, 35},
      {6, 12},
      {7, 36},
      {8, 7},
      {9, 27},
      {10, 28},
   },
}

return fsm
